#include <vector>
#include <memory>

class Game {
public:
    std::vector<std::unique_ptr<Skeleton>> skeletons;

    void spawnSkeleton() {
        skeletons.push_back(std::make_unique<Skeleton>());
    }
};

Game game;
game.spawnSkeleton();  // Spawns 1 skeleton
game.spawnSkeleton();  // Spawns another

_________________________________________________________________________________________________
_________________________________________________________________________________________________
_________________________________________________________________________________________________


/*/class Skeleton : public Monster
{
public:
	Skeleton();//Constructor
	void skeleDraw(sf::RenderWindow& window);

private:
	sf::Texture skeleTexture;
	std::unique_ptr<sf::Sprite> skeleSprite;
};
*/

------------------------------------------------------------------------------------------------


Skeleton::Skeleton()
{
	skeleTexture.loadFromFile("graphics/skeleton.png");
	skeleSprite = std::make_unique<sf::Sprite>(skeleTexture);
	skeleSprite->setPosition({ 300.f,300.f });


}


void Skeleton::skeleDraw(sf::RenderWindow& window)
{
	window.draw(*skeleSprite);
}



_________________________________________________________________________________________________
_________________________________________________________________________________________________
_________________________________________________________________________________________________